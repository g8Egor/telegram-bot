"""–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏ —á–µ—Ä–µ–∑ Tribute."""
from aiogram import Router, F
from aiogram.types import Message, CallbackQuery, InlineKeyboardButton, InlineKeyboardMarkup
from ..services import ux
from .. import texts
from ..config import config
from ..keyboards import get_main_menu

router = Router(name=__name__)

@router.message(F.text.in_({"üí≥ –ü–æ–¥–ø–∏—Å–∫–∞", "/billing", "/subscribe"}))
async def billing_menu(msg: Message):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–¥–ø–∏—Å–∫–µ Pro."""
    title = ux.h1("–ü–æ–¥–ø–∏—Å–∫–∞ Pro", "üí≥")
    intro = ux.p("5 –¥–Ω–µ–π –±–µ—Å–ø–ª–∞—Ç–Ω–æ ‚Äî –ø–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø. –ü–æ—Å–ª–µ 5 –¥–Ω–µ–π –±–µ–∑ Pro –±—É–¥—É—Ç –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –Ω–∞ —Ñ–æ–∫—É—Å-—Å–µ—Å—Å–∏—é –∏ \"–¶–∏—Ñ—Ä–æ–≤–æ–µ –Ø\".")
    
    features = [
        "üéØ –ù–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–µ —Ñ–æ–∫—É—Å-—Å–µ—Å—Å–∏–∏ (25 –∏ 45 –º–∏–Ω—É—Ç)",
        "üß© –ü–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫ –¶–∏—Ñ—Ä–æ–≤–æ–º—É –Ø",
        "üìä –†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞",
        "üíæ –≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö",
        "üîî –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è"
    ]
    
    body = ux.block("–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ Pro", features, "‚ú®")
    footer = ux.p("Pro ‚Äî 199 ‚ÇΩ/–º–µ—Å. 5 –¥–Ω–µ–π ‚Äî –±–µ—Å–ø–ª–∞—Ç–Ω–æ.")
    
    # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –≤ Tribute
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(
            text="–û—Ñ–æ—Ä–º–∏—Ç—å Pro –≤ Tribute", 
            url=config.tribute_product_url
        )],
        [InlineKeyboardButton(text="‚Ü©Ô∏è –í –º–µ–Ω—é", callback_data="nav:menu")]
    ])
    
    await msg.answer(
        ux.compose(title, intro, body, ux.hr(), footer),
        reply_markup=keyboard
    )

@router.message(F.text.contains("–ø–æ–¥–ø–∏—Å–∫–∞"))
async def billing_menu_alt(msg: Message):
    """–ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø–æ–¥–ø–∏—Å–∫–∏."""
    await billing_menu(msg)

@router.callback_query(F.data == "nav:menu")
async def back_to_menu(callback: CallbackQuery):
    """–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é."""
    await callback.message.edit_text(
        ux.compose(
            ux.h1("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", "üè†"),
            ux.p("–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª:")
        ),
        reply_markup=get_main_menu()
    )
    await callback.answer()